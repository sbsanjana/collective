{"ast":null,"code":"var _jsxFileName = \"/Users/sanjanabadhya/collective/src/components/LoginVal.js\";\nimport React from 'react';\nimport { Formik } from \"formik\";\nimport { Form } from 'react-bootstrap';\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nexport default class Login extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"Required\"),\n        password: Yup.string().required(\"No password provided.\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, errors.email), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, errors.password), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, \"Login\")));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sanjanabadhya/collective/src/components/LoginVal.js"],"names":["React","Formik","Form","EmailValidator","Yup","Login","Component","render","email","password","values","setSubmitting","setTimeout","console","log","object","shape","string","required","min","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from \"formik\";\nimport {Form} from 'react-bootstrap'\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div>\n           <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n                console.log(\"Logging in\", values);\n                setSubmitting(false);\n            }, 500);\n            }}\n\n    validationSchema={Yup.object().shape({\n      email: Yup.string()\n        .email()\n        .required(\"Required\"),\n      password: Yup.string()\n        .required(\"No password provided.\")\n        .min(8, \"Password is too short - should be 8 chars minimum.\")\n        .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n    })}\n  >\n    {props => {\n      const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return (\n          <Container>\n        <Form onSubmit={handleSubmit}>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.email && touched.email && \"error\"}\n          />\n          {errors.email && touched.email && (\n            <div className=\"input-feedback\">{errors.email}</div>\n          )}\n          <label htmlFor=\"email\">Password</label>\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.password && touched.password && \"error\"}\n          />\n          {errors.password && touched.password && (\n            <div className=\"input-feedback\">{errors.password}</div>\n          )}\n          <button type=\"submit\" disabled={isSubmitting}>\n            Login\n          </button>\n        </Form>\n        </Container>\n      );\n    }}\n  \n  </Formik>\n          </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}