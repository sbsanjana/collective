{"ast":null,"code":"var _jsxFileName = \"/Users/sanjanabadhya/collective/src/components/LoginVal.js\";\nimport React from 'react';\nimport { Formik } from \"formik\";\nimport { Form, Container, Button, Row, Col } from 'react-bootstrap';\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\nexport default class Login extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: \"\",\n        password: \"\"\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          console.log(\"Logging in\", values);\n          setSubmitting(false);\n        }, 500);\n      },\n      validationSchema: Yup.object().shape({\n        email: Yup.string().email().required(\"This field is required\"),\n        password: Yup.string().required(\"Must enter a valid password.\").min(5, \"Password must be 5 characters minimum.\")\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 12\n      }\n    }, props => {\n      const {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-md-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        htmlFor: \"email\",\n        style: {\n          fontWeight: 'bold',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, errors.email), /*#__PURE__*/React.createElement(Form.Label, {\n        htmlFor: \"password\",\n        style: {\n          fontWeight: 'bold',\n          fontStyle: 'italic'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n        type: \"password\",\n        placeholder: \"Enter password\",\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password && \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, errors.password), /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \"Login\")))));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/sanjanabadhya/collective/src/components/LoginVal.js"],"names":["React","Formik","Form","Container","Button","Row","Col","EmailValidator","Yup","Login","Component","render","email","password","values","errors","test","setSubmitting","setTimeout","console","log","object","shape","string","required","min","props","touched","handleChange","handleBlur","handleSubmit","fontWeight","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from \"formik\";\nimport {Form, Container, Button, Row, Col} from 'react-bootstrap'\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\n\nexport default class Login extends React.Component {\n    render() {\n        return (\n            <div>\n           <Formik\n            initialValues={{ email: \"\", password: \"\" }}\n            validate={values => {\n                const errors = {};\n                if (!values.email) {\n                  errors.email = 'Required';\n                } else if (\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                  errors.email = 'Invalid email address';\n                }\n                return errors;\n              }}\n            onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n                console.log(\"Logging in\", values);\n                setSubmitting(false);\n            }, 500);\n            }}\n\n    validationSchema={Yup.object().shape({\n      email: Yup.string()\n        .email()\n        .required(\"This field is required\"),\n      password: Yup.string()\n        .required(\"Must enter a valid password.\")\n        .min(5, \"Password must be 5 characters minimum.\")\n    })}\n  >\n    {props => {\n      const {\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit\n      } = props;\n      return (\n    <Container>\n        <Row className=\"justify-content-md-center\">\n           \n            <Col xs={6} md={4}>\n           \n        <Form onSubmit={handleSubmit}>\n          <Form.Label htmlFor=\"email\" style={{fontWeight:'bold',fontStyle:'italic'}}>Email</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n            name=\"email\"\n            type=\"text\"\n            placeholder=\"Enter your email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.email && touched.email && \"error\"}\n          />\n          {errors.email && touched.email && (\n            <div className=\"input-feedback\">{errors.email}</div>\n          )}\n          \n          <Form.Label htmlFor=\"password\" style={{fontWeight:'bold', fontStyle:'italic'}}>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Enter password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            className={errors.password && touched.password && \"error\"}\n          />\n          {errors.password && touched.password && (\n            <div className=\"input-feedback\">{errors.password}</div>\n          )}\n          <Button variant=\"secondary\">\n            Login\n          </Button>\n        </Form>\n        </Col>\n        </Row>\n        </Container>\n      );\n    }}\n  \n  </Formik>\n          </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}